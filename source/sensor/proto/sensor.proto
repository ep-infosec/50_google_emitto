// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package emitto.sensor;

import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

// DeployRules instructs a sensor to fetch an updated rules file and
// to reload the rules engine.
message DeployRules {
  // Updated rule file.
  string rule_file = 1;
}

// ReloadRules instructs a sensor to reload the rules engine.
message ReloadRules {}

// SensorRequest represents an operation for a sensor to perform.
message SensorRequest {
  // Unique request ID.
  string id = 1;

  // Request time.
  google.protobuf.Timestamp time = 2;

  // Type is the type of operation for a sensor to perform.
  oneof type {
    DeployRules deploy_rules = 3;
    ReloadRules reload_rules = 4;
  }
}

// Sensor host information.
 message Host {
   // FQDN of the sensor.
   string fqdn = 1;
   // IP address of the sensor.
   string ip = 2;
   // UUID of the sensor.
   string uuid = 3;
   // Org of the sensor.
   string org = 4;
   // Zone of the sensor.
   string zone = 5;
}

// SensorMessage contains a type of sensor message to be sent to the server.
message SensorMessage {
  // Unique ID of the message.
  string id = 1;
  oneof type {
    SensorResponse response = 2;
    SensorAlert alert = 3;
    Heartbeat heartbeat = 4;
  }
}

// SensorResponse is a response to a SensorRequest.
message SensorResponse {
  // SensorRequest ID.
  string id = 1;

  // Response time.
  google.protobuf.Timestamp time = 2;

  // Status of the corresponding request.
  google.rpc.Status status = 3;

  // Sensor host information.
  Host host = 4;
}

// SensorAlert is an alert originating from the sensor.
message SensorAlert {
  // Notification time.
  google.protobuf.Timestamp time = 1;

  // Notification status details.
  google.rpc.Status status = 2;

  // Sensor host information.
  Host host = 3;
}


// Heartbeat is a heartbeat message from the sensor.
message Heartbeat {
  // Heartbeat time.
  google.protobuf.Timestamp time = 1;

  // Sensor host information.
  Host host = 2;
}
