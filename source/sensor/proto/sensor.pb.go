// Code generated by protoc-gen-go. DO NOT EDIT.
// source: source/sensor/proto/sensor.proto

package emitto_sensor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	status "google.golang.org/genproto/googleapis/rpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeployRules struct {
	RuleFile             string   `protobuf:"bytes,1,opt,name=rule_file,json=ruleFile,proto3" json:"rule_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployRules) Reset()         { *m = DeployRules{} }
func (m *DeployRules) String() string { return proto.CompactTextString(m) }
func (*DeployRules) ProtoMessage()    {}
func (*DeployRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{0}
}

func (m *DeployRules) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployRules.Unmarshal(m, b)
}
func (m *DeployRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployRules.Marshal(b, m, deterministic)
}
func (m *DeployRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployRules.Merge(m, src)
}
func (m *DeployRules) XXX_Size() int {
	return xxx_messageInfo_DeployRules.Size(m)
}
func (m *DeployRules) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployRules.DiscardUnknown(m)
}

var xxx_messageInfo_DeployRules proto.InternalMessageInfo

func (m *DeployRules) GetRuleFile() string {
	if m != nil {
		return m.RuleFile
	}
	return ""
}

type ReloadRules struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReloadRules) Reset()         { *m = ReloadRules{} }
func (m *ReloadRules) String() string { return proto.CompactTextString(m) }
func (*ReloadRules) ProtoMessage()    {}
func (*ReloadRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{1}
}

func (m *ReloadRules) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReloadRules.Unmarshal(m, b)
}
func (m *ReloadRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReloadRules.Marshal(b, m, deterministic)
}
func (m *ReloadRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReloadRules.Merge(m, src)
}
func (m *ReloadRules) XXX_Size() int {
	return xxx_messageInfo_ReloadRules.Size(m)
}
func (m *ReloadRules) XXX_DiscardUnknown() {
	xxx_messageInfo_ReloadRules.DiscardUnknown(m)
}

var xxx_messageInfo_ReloadRules proto.InternalMessageInfo

type SensorRequest struct {
	Id   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Time *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*SensorRequest_DeployRules
	//	*SensorRequest_ReloadRules
	Type                 isSensorRequest_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SensorRequest) Reset()         { *m = SensorRequest{} }
func (m *SensorRequest) String() string { return proto.CompactTextString(m) }
func (*SensorRequest) ProtoMessage()    {}
func (*SensorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{2}
}

func (m *SensorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorRequest.Unmarshal(m, b)
}
func (m *SensorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorRequest.Marshal(b, m, deterministic)
}
func (m *SensorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorRequest.Merge(m, src)
}
func (m *SensorRequest) XXX_Size() int {
	return xxx_messageInfo_SensorRequest.Size(m)
}
func (m *SensorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SensorRequest proto.InternalMessageInfo

func (m *SensorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SensorRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type isSensorRequest_Type interface {
	isSensorRequest_Type()
}

type SensorRequest_DeployRules struct {
	DeployRules *DeployRules `protobuf:"bytes,3,opt,name=deploy_rules,json=deployRules,proto3,oneof"`
}

type SensorRequest_ReloadRules struct {
	ReloadRules *ReloadRules `protobuf:"bytes,4,opt,name=reload_rules,json=reloadRules,proto3,oneof"`
}

func (*SensorRequest_DeployRules) isSensorRequest_Type() {}

func (*SensorRequest_ReloadRules) isSensorRequest_Type() {}

func (m *SensorRequest) GetType() isSensorRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SensorRequest) GetDeployRules() *DeployRules {
	if x, ok := m.GetType().(*SensorRequest_DeployRules); ok {
		return x.DeployRules
	}
	return nil
}

func (m *SensorRequest) GetReloadRules() *ReloadRules {
	if x, ok := m.GetType().(*SensorRequest_ReloadRules); ok {
		return x.ReloadRules
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SensorRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SensorRequest_DeployRules)(nil),
		(*SensorRequest_ReloadRules)(nil),
	}
}

type Host struct {
	Fqdn                 string   `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Org                  string   `protobuf:"bytes,4,opt,name=org,proto3" json:"org,omitempty"`
	Zone                 string   `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Host) Reset()         { *m = Host{} }
func (m *Host) String() string { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()    {}
func (*Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{3}
}

func (m *Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Host.Unmarshal(m, b)
}
func (m *Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Host.Marshal(b, m, deterministic)
}
func (m *Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Host.Merge(m, src)
}
func (m *Host) XXX_Size() int {
	return xxx_messageInfo_Host.Size(m)
}
func (m *Host) XXX_DiscardUnknown() {
	xxx_messageInfo_Host.DiscardUnknown(m)
}

var xxx_messageInfo_Host proto.InternalMessageInfo

func (m *Host) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

func (m *Host) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Host) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Host) GetOrg() string {
	if m != nil {
		return m.Org
	}
	return ""
}

func (m *Host) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type SensorMessage struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*SensorMessage_Response
	//	*SensorMessage_Alert
	//	*SensorMessage_Heartbeat
	Type                 isSensorMessage_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SensorMessage) Reset()         { *m = SensorMessage{} }
func (m *SensorMessage) String() string { return proto.CompactTextString(m) }
func (*SensorMessage) ProtoMessage()    {}
func (*SensorMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{4}
}

func (m *SensorMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorMessage.Unmarshal(m, b)
}
func (m *SensorMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorMessage.Marshal(b, m, deterministic)
}
func (m *SensorMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorMessage.Merge(m, src)
}
func (m *SensorMessage) XXX_Size() int {
	return xxx_messageInfo_SensorMessage.Size(m)
}
func (m *SensorMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SensorMessage proto.InternalMessageInfo

func (m *SensorMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type isSensorMessage_Type interface {
	isSensorMessage_Type()
}

type SensorMessage_Response struct {
	Response *SensorResponse `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type SensorMessage_Alert struct {
	Alert *SensorAlert `protobuf:"bytes,3,opt,name=alert,proto3,oneof"`
}

type SensorMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,4,opt,name=heartbeat,proto3,oneof"`
}

func (*SensorMessage_Response) isSensorMessage_Type() {}

func (*SensorMessage_Alert) isSensorMessage_Type() {}

func (*SensorMessage_Heartbeat) isSensorMessage_Type() {}

func (m *SensorMessage) GetType() isSensorMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SensorMessage) GetResponse() *SensorResponse {
	if x, ok := m.GetType().(*SensorMessage_Response); ok {
		return x.Response
	}
	return nil
}

func (m *SensorMessage) GetAlert() *SensorAlert {
	if x, ok := m.GetType().(*SensorMessage_Alert); ok {
		return x.Alert
	}
	return nil
}

func (m *SensorMessage) GetHeartbeat() *Heartbeat {
	if x, ok := m.GetType().(*SensorMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SensorMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SensorMessage_Response)(nil),
		(*SensorMessage_Alert)(nil),
		(*SensorMessage_Heartbeat)(nil),
	}
}

type SensorResponse struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status               *status.Status       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Host                 *Host                `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SensorResponse) Reset()         { *m = SensorResponse{} }
func (m *SensorResponse) String() string { return proto.CompactTextString(m) }
func (*SensorResponse) ProtoMessage()    {}
func (*SensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{5}
}

func (m *SensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorResponse.Unmarshal(m, b)
}
func (m *SensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorResponse.Marshal(b, m, deterministic)
}
func (m *SensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorResponse.Merge(m, src)
}
func (m *SensorResponse) XXX_Size() int {
	return xxx_messageInfo_SensorResponse.Size(m)
}
func (m *SensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SensorResponse proto.InternalMessageInfo

func (m *SensorResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SensorResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *SensorResponse) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SensorResponse) GetHost() *Host {
	if m != nil {
		return m.Host
	}
	return nil
}

type SensorAlert struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Status               *status.Status       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Host                 *Host                `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SensorAlert) Reset()         { *m = SensorAlert{} }
func (m *SensorAlert) String() string { return proto.CompactTextString(m) }
func (*SensorAlert) ProtoMessage()    {}
func (*SensorAlert) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{6}
}

func (m *SensorAlert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorAlert.Unmarshal(m, b)
}
func (m *SensorAlert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorAlert.Marshal(b, m, deterministic)
}
func (m *SensorAlert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorAlert.Merge(m, src)
}
func (m *SensorAlert) XXX_Size() int {
	return xxx_messageInfo_SensorAlert.Size(m)
}
func (m *SensorAlert) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorAlert.DiscardUnknown(m)
}

var xxx_messageInfo_SensorAlert proto.InternalMessageInfo

func (m *SensorAlert) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *SensorAlert) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SensorAlert) GetHost() *Host {
	if m != nil {
		return m.Host
	}
	return nil
}

type Heartbeat struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Host                 *Host                `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_8209f5d37db142cb, []int{7}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Heartbeat) GetHost() *Host {
	if m != nil {
		return m.Host
	}
	return nil
}

func init() {
	proto.RegisterType((*DeployRules)(nil), "emitto.sensor.DeployRules")
	proto.RegisterType((*ReloadRules)(nil), "emitto.sensor.ReloadRules")
	proto.RegisterType((*SensorRequest)(nil), "emitto.sensor.SensorRequest")
	proto.RegisterType((*Host)(nil), "emitto.sensor.Host")
	proto.RegisterType((*SensorMessage)(nil), "emitto.sensor.SensorMessage")
	proto.RegisterType((*SensorResponse)(nil), "emitto.sensor.SensorResponse")
	proto.RegisterType((*SensorAlert)(nil), "emitto.sensor.SensorAlert")
	proto.RegisterType((*Heartbeat)(nil), "emitto.sensor.Heartbeat")
}

func init() { proto.RegisterFile("source/sensor/proto/sensor.proto", fileDescriptor_8209f5d37db142cb) }

var fileDescriptor_8209f5d37db142cb = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0xc7, 0x8d, 0xea, 0x71, 0x53, 0xa1, 0xe5, 0x80, 0x15, 0x84, 0x88, 0x7c, 0xa1,
	0xea, 0xc1, 0x91, 0xca, 0x05, 0x89, 0x43, 0x05, 0x42, 0xc8, 0x17, 0x2e, 0x5b, 0xee, 0x95, 0x93,
	0x9d, 0xa4, 0x96, 0x9c, 0xec, 0x76, 0x77, 0x7d, 0x28, 0x8f, 0xc1, 0x3b, 0xf0, 0x42, 0xdc, 0x78,
	0x1b, 0xb4, 0xff, 0x5c, 0x37, 0x80, 0x4a, 0xd4, 0xdb, 0xac, 0xf7, 0x9b, 0x99, 0xdf, 0xf7, 0x79,
	0x61, 0xae, 0x78, 0x27, 0x57, 0xb8, 0x50, 0xb8, 0x53, 0x5c, 0x2e, 0x84, 0xe4, 0x9a, 0xfb, 0x43,
	0x69, 0x0f, 0x64, 0x8a, 0xdb, 0x46, 0x6b, 0x5e, 0xba, 0x8f, 0xb3, 0xd7, 0x1b, 0xce, 0x37, 0x2d,
	0x3a, 0xe5, 0xb2, 0x5b, 0x2f, 0x74, 0xb3, 0x45, 0xa5, 0xeb, 0xad, 0x70, 0xfa, 0xd9, 0x0b, 0x2f,
	0x90, 0x62, 0xb5, 0x50, 0xba, 0xd6, 0x9d, 0x72, 0x17, 0xc5, 0x39, 0x64, 0x9f, 0x50, 0xb4, 0xfc,
	0x8e, 0x76, 0x2d, 0x2a, 0xf2, 0x12, 0x52, 0xd9, 0xb5, 0x78, 0xbd, 0x6e, 0x5a, 0xcc, 0xa3, 0x79,
	0x74, 0x96, 0xd2, 0x63, 0xf3, 0xe1, 0x73, 0xd3, 0x62, 0x31, 0x85, 0x8c, 0x62, 0xcb, 0x6b, 0x66,
	0xb5, 0xc5, 0xaf, 0x08, 0xa6, 0x57, 0x76, 0x3f, 0xc5, 0xdb, 0x0e, 0x95, 0x26, 0xa7, 0x10, 0x37,
	0xcc, 0xb7, 0xc5, 0x0d, 0x23, 0x25, 0x24, 0x06, 0x24, 0x8f, 0xe7, 0xd1, 0x59, 0x76, 0x31, 0x2b,
	0x1d, 0x44, 0x19, 0x28, 0xcb, 0xaf, 0x81, 0x92, 0x5a, 0x1d, 0xb9, 0x84, 0x13, 0x66, 0x61, 0xae,
	0xcd, 0x4e, 0x95, 0x8f, 0x7d, 0xdf, 0x03, 0xb3, 0xe5, 0x80, 0xb7, 0x1a, 0xd1, 0x8c, 0x0d, 0xf0,
	0x2f, 0xe1, 0x44, 0x5a, 0x42, 0x3f, 0x20, 0xf9, 0xeb, 0x80, 0x81, 0x09, 0x33, 0x40, 0xde, 0x1f,
	0x3f, 0x4e, 0x20, 0xd1, 0x77, 0x02, 0x0b, 0x06, 0x49, 0xc5, 0x95, 0x26, 0x04, 0x92, 0xf5, 0x2d,
	0xdb, 0x79, 0x4f, 0xb6, 0xb6, 0x2e, 0x85, 0xf5, 0x64, 0x5c, 0x0a, 0xa3, 0xe9, 0xba, 0x86, 0x59,
	0xda, 0x94, 0xda, 0x9a, 0x3c, 0x83, 0x31, 0x97, 0x1b, 0xbb, 0x3f, 0xa5, 0xa6, 0x34, 0xaa, 0x6f,
	0x7c, 0x87, 0xf9, 0x91, 0x53, 0x99, 0xba, 0xf8, 0xd9, 0x27, 0xf8, 0x05, 0x95, 0xaa, 0x37, 0xf8,
	0x47, 0x82, 0xef, 0xe1, 0x58, 0xa2, 0x12, 0x7c, 0xa7, 0x42, 0x8a, 0xaf, 0xf6, 0xcc, 0x84, 0x3f,
	0xe0, 0x44, 0xd5, 0x88, 0xf6, 0x0d, 0xe4, 0x02, 0x8e, 0xea, 0x16, 0xa5, 0xfe, 0x47, 0x8e, 0xae,
	0xf3, 0x83, 0x51, 0x54, 0x23, 0xea, 0xa4, 0xe4, 0x1d, 0xa4, 0x37, 0x58, 0x4b, 0xbd, 0xc4, 0x5a,
	0xfb, 0xf8, 0xf2, 0xbd, 0xbe, 0x2a, 0xdc, 0x57, 0x23, 0x7a, 0x2f, 0xee, 0xa3, 0xfb, 0x11, 0xc1,
	0xe9, 0x43, 0xa8, 0x27, 0xbf, 0x8b, 0x73, 0x98, 0xb8, 0x47, 0xeb, 0x9d, 0x90, 0xd0, 0x21, 0xc5,
	0xaa, 0xbc, 0xb2, 0x37, 0xd4, 0x2b, 0xc8, 0x1b, 0x48, 0x6e, 0xb8, 0x0a, 0xec, 0xcf, 0xf7, 0xd9,
	0xb9, 0xd2, 0xd4, 0x0a, 0x8a, 0xef, 0x11, 0x64, 0x83, 0x08, 0x7a, 0xa8, 0xe8, 0x60, 0xa8, 0xf8,
	0xbf, 0xa1, 0xc6, 0x8f, 0x41, 0x31, 0x48, 0xfb, 0x78, 0x0f, 0x26, 0x0a, 0x5b, 0xe2, 0x47, 0xb6,
	0x2c, 0x27, 0x76, 0xc4, 0xdb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x4e, 0x92, 0x03, 0x68,
	0x04, 0x00, 0x00,
}
