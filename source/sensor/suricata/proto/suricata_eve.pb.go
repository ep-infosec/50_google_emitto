// Code generated by protoc-gen-go. DO NOT EDIT.
// source: source/sensor/suricata/proto/suricata_eve.proto

package emitto_sensor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EVE struct {
	Timestamp            string      `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EventType            string      `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	SrcIp                string      `protobuf:"bytes,3,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	SrcPort              int32       `protobuf:"varint,4,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DestIp               string      `protobuf:"bytes,5,opt,name=dest_ip,json=destIp,proto3" json:"dest_ip,omitempty"`
	DestPort             int32       `protobuf:"varint,6,opt,name=dest_port,json=destPort,proto3" json:"dest_port,omitempty"`
	Proto                string      `protobuf:"bytes,7,opt,name=proto,proto3" json:"proto,omitempty"`
	PcapCnt              int32       `protobuf:"varint,8,opt,name=pcap_cnt,json=pcapCnt,proto3" json:"pcap_cnt,omitempty"`
	AppProto             string      `protobuf:"bytes,9,opt,name=app_proto,json=appProto,proto3" json:"app_proto,omitempty"`
	AppProtoTc           string      `protobuf:"bytes,10,opt,name=app_proto_tc,json=appProtoTc,proto3" json:"app_proto_tc,omitempty"`
	AppProtoTs           string      `protobuf:"bytes,11,opt,name=app_proto_ts,json=appProtoTs,proto3" json:"app_proto_ts,omitempty"`
	FlowId               int64       `protobuf:"varint,12,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Vlan                 int32       `protobuf:"varint,13,opt,name=vlan,proto3" json:"vlan,omitempty"`
	TxId                 int32       `protobuf:"varint,14,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Packet               string      `protobuf:"bytes,15,opt,name=packet,proto3" json:"packet,omitempty"`
	IcmpType             int32       `protobuf:"varint,16,opt,name=icmp_type,json=icmpType,proto3" json:"icmp_type,omitempty"`
	IcmpCode             int32       `protobuf:"varint,17,opt,name=icmp_code,json=icmpCode,proto3" json:"icmp_code,omitempty"`
	ResponseIcmpCode     int32       `protobuf:"varint,18,opt,name=response_icmp_code,json=responseIcmpCode,proto3" json:"response_icmp_code,omitempty"`
	ResponseIcmpType     int32       `protobuf:"varint,19,opt,name=response_icmp_type,json=responseIcmpType,proto3" json:"response_icmp_type,omitempty"`
	Vars                 *Vars       `protobuf:"bytes,20,opt,name=vars,proto3" json:"vars,omitempty"`
	Alert                *Alert      `protobuf:"bytes,21,opt,name=alert,proto3" json:"alert,omitempty"`
	Http                 *HTTP       `protobuf:"bytes,22,opt,name=http,proto3" json:"http,omitempty"`
	Fileinfo             *FileInfo   `protobuf:"bytes,23,opt,name=fileinfo,proto3" json:"fileinfo,omitempty"`
	Tcp                  *TCP        `protobuf:"bytes,24,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Dns                  *DNS        `protobuf:"bytes,25,opt,name=dns,proto3" json:"dns,omitempty"`
	Tls                  *TLS        `protobuf:"bytes,26,opt,name=tls,proto3" json:"tls,omitempty"`
	Flow                 *Flow       `protobuf:"bytes,27,opt,name=flow,proto3" json:"flow,omitempty"`
	PacketInfo           *PacketInfo `protobuf:"bytes,28,opt,name=packet_info,json=packetInfo,proto3" json:"packet_info,omitempty"`
	Ssh                  *SSH        `protobuf:"bytes,29,opt,name=ssh,proto3" json:"ssh,omitempty"`
	Smtp                 *SMTP       `protobuf:"bytes,30,opt,name=smtp,proto3" json:"smtp,omitempty"`
	Email                *Email      `protobuf:"bytes,31,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EVE) Reset()         { *m = EVE{} }
func (m *EVE) String() string { return proto.CompactTextString(m) }
func (*EVE) ProtoMessage()    {}
func (*EVE) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{0}
}

func (m *EVE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EVE.Unmarshal(m, b)
}
func (m *EVE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EVE.Marshal(b, m, deterministic)
}
func (m *EVE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EVE.Merge(m, src)
}
func (m *EVE) XXX_Size() int {
	return xxx_messageInfo_EVE.Size(m)
}
func (m *EVE) XXX_DiscardUnknown() {
	xxx_messageInfo_EVE.DiscardUnknown(m)
}

var xxx_messageInfo_EVE proto.InternalMessageInfo

func (m *EVE) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *EVE) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EVE) GetSrcIp() string {
	if m != nil {
		return m.SrcIp
	}
	return ""
}

func (m *EVE) GetSrcPort() int32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *EVE) GetDestIp() string {
	if m != nil {
		return m.DestIp
	}
	return ""
}

func (m *EVE) GetDestPort() int32 {
	if m != nil {
		return m.DestPort
	}
	return 0
}

func (m *EVE) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *EVE) GetPcapCnt() int32 {
	if m != nil {
		return m.PcapCnt
	}
	return 0
}

func (m *EVE) GetAppProto() string {
	if m != nil {
		return m.AppProto
	}
	return ""
}

func (m *EVE) GetAppProtoTc() string {
	if m != nil {
		return m.AppProtoTc
	}
	return ""
}

func (m *EVE) GetAppProtoTs() string {
	if m != nil {
		return m.AppProtoTs
	}
	return ""
}

func (m *EVE) GetFlowId() int64 {
	if m != nil {
		return m.FlowId
	}
	return 0
}

func (m *EVE) GetVlan() int32 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

func (m *EVE) GetTxId() int32 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *EVE) GetPacket() string {
	if m != nil {
		return m.Packet
	}
	return ""
}

func (m *EVE) GetIcmpType() int32 {
	if m != nil {
		return m.IcmpType
	}
	return 0
}

func (m *EVE) GetIcmpCode() int32 {
	if m != nil {
		return m.IcmpCode
	}
	return 0
}

func (m *EVE) GetResponseIcmpCode() int32 {
	if m != nil {
		return m.ResponseIcmpCode
	}
	return 0
}

func (m *EVE) GetResponseIcmpType() int32 {
	if m != nil {
		return m.ResponseIcmpType
	}
	return 0
}

func (m *EVE) GetVars() *Vars {
	if m != nil {
		return m.Vars
	}
	return nil
}

func (m *EVE) GetAlert() *Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

func (m *EVE) GetHttp() *HTTP {
	if m != nil {
		return m.Http
	}
	return nil
}

func (m *EVE) GetFileinfo() *FileInfo {
	if m != nil {
		return m.Fileinfo
	}
	return nil
}

func (m *EVE) GetTcp() *TCP {
	if m != nil {
		return m.Tcp
	}
	return nil
}

func (m *EVE) GetDns() *DNS {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *EVE) GetTls() *TLS {
	if m != nil {
		return m.Tls
	}
	return nil
}

func (m *EVE) GetFlow() *Flow {
	if m != nil {
		return m.Flow
	}
	return nil
}

func (m *EVE) GetPacketInfo() *PacketInfo {
	if m != nil {
		return m.PacketInfo
	}
	return nil
}

func (m *EVE) GetSsh() *SSH {
	if m != nil {
		return m.Ssh
	}
	return nil
}

func (m *EVE) GetSmtp() *SMTP {
	if m != nil {
		return m.Smtp
	}
	return nil
}

func (m *EVE) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type Vars struct {
	Flowbits             map[string]bool `protobuf:"bytes,1,rep,name=flowbits,proto3" json:"flowbits,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vars) Reset()         { *m = Vars{} }
func (m *Vars) String() string { return proto.CompactTextString(m) }
func (*Vars) ProtoMessage()    {}
func (*Vars) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{1}
}

func (m *Vars) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vars.Unmarshal(m, b)
}
func (m *Vars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vars.Marshal(b, m, deterministic)
}
func (m *Vars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vars.Merge(m, src)
}
func (m *Vars) XXX_Size() int {
	return xxx_messageInfo_Vars.Size(m)
}
func (m *Vars) XXX_DiscardUnknown() {
	xxx_messageInfo_Vars.DiscardUnknown(m)
}

var xxx_messageInfo_Vars proto.InternalMessageInfo

func (m *Vars) GetFlowbits() map[string]bool {
	if m != nil {
		return m.Flowbits
	}
	return nil
}

type Alert struct {
	Action               string    `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Gid                  int32     `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	SignatureId          int32     `protobuf:"varint,3,opt,name=signature_id,json=signatureId,proto3" json:"signature_id,omitempty"`
	Rev                  int32     `protobuf:"varint,4,opt,name=rev,proto3" json:"rev,omitempty"`
	Signature            string    `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	Category             string    `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	Severity             int32     `protobuf:"varint,7,opt,name=severity,proto3" json:"severity,omitempty"`
	TenantId             int32     `protobuf:"varint,8,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{2}
}

func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (m *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(m, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Alert) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *Alert) GetSignatureId() int32 {
	if m != nil {
		return m.SignatureId
	}
	return 0
}

func (m *Alert) GetRev() int32 {
	if m != nil {
		return m.Rev
	}
	return 0
}

func (m *Alert) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *Alert) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Alert) GetSeverity() int32 {
	if m != nil {
		return m.Severity
	}
	return 0
}

func (m *Alert) GetTenantId() int32 {
	if m != nil {
		return m.TenantId
	}
	return 0
}

func (m *Alert) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Metadata struct {
	UpdatedAt            []string `protobuf:"bytes,1,rep,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt            []string `protobuf:"bytes,2,rep,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{3}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetUpdatedAt() []string {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Metadata) GetCreatedAt() []string {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type HTTP struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	HttpUserAgent        string   `protobuf:"bytes,3,opt,name=http_user_agent,json=httpUserAgent,proto3" json:"http_user_agent,omitempty"`
	HttpContentType      string   `protobuf:"bytes,4,opt,name=http_content_type,json=httpContentType,proto3" json:"http_content_type,omitempty"`
	HttpRefer            string   `protobuf:"bytes,5,opt,name=http_refer,json=httpRefer,proto3" json:"http_refer,omitempty"`
	HttpMethod           string   `protobuf:"bytes,6,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"`
	Protocol             string   `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Status               int32    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Length               int32    `protobuf:"varint,9,opt,name=length,proto3" json:"length,omitempty"`
	Redirect             string   `protobuf:"bytes,10,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Xff                  string   `protobuf:"bytes,11,opt,name=xff,proto3" json:"xff,omitempty"`
	HttpRequestBody      string   `protobuf:"bytes,12,opt,name=http_request_body,json=httpRequestBody,proto3" json:"http_request_body,omitempty"`
	HttpResponseBody     string   `protobuf:"bytes,13,opt,name=http_response_body,json=httpResponseBody,proto3" json:"http_response_body,omitempty"`
	HttpPort             int32    `protobuf:"varint,14,opt,name=http_port,json=httpPort,proto3" json:"http_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTP) Reset()         { *m = HTTP{} }
func (m *HTTP) String() string { return proto.CompactTextString(m) }
func (*HTTP) ProtoMessage()    {}
func (*HTTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{4}
}

func (m *HTTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTP.Unmarshal(m, b)
}
func (m *HTTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTP.Marshal(b, m, deterministic)
}
func (m *HTTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTP.Merge(m, src)
}
func (m *HTTP) XXX_Size() int {
	return xxx_messageInfo_HTTP.Size(m)
}
func (m *HTTP) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTP.DiscardUnknown(m)
}

var xxx_messageInfo_HTTP proto.InternalMessageInfo

func (m *HTTP) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *HTTP) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HTTP) GetHttpUserAgent() string {
	if m != nil {
		return m.HttpUserAgent
	}
	return ""
}

func (m *HTTP) GetHttpContentType() string {
	if m != nil {
		return m.HttpContentType
	}
	return ""
}

func (m *HTTP) GetHttpRefer() string {
	if m != nil {
		return m.HttpRefer
	}
	return ""
}

func (m *HTTP) GetHttpMethod() string {
	if m != nil {
		return m.HttpMethod
	}
	return ""
}

func (m *HTTP) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *HTTP) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *HTTP) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *HTTP) GetRedirect() string {
	if m != nil {
		return m.Redirect
	}
	return ""
}

func (m *HTTP) GetXff() string {
	if m != nil {
		return m.Xff
	}
	return ""
}

func (m *HTTP) GetHttpRequestBody() string {
	if m != nil {
		return m.HttpRequestBody
	}
	return ""
}

func (m *HTTP) GetHttpResponseBody() string {
	if m != nil {
		return m.HttpResponseBody
	}
	return ""
}

func (m *HTTP) GetHttpPort() int32 {
	if m != nil {
		return m.HttpPort
	}
	return 0
}

type FileInfo struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Stored               bool     `protobuf:"varint,3,opt,name=stored,proto3" json:"stored,omitempty"`
	Size                 int32    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	TxId                 int32    `protobuf:"varint,5,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Gaps                 bool     `protobuf:"varint,6,opt,name=gaps,proto3" json:"gaps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{5}
}

func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *FileInfo) GetStored() bool {
	if m != nil {
		return m.Stored
	}
	return false
}

func (m *FileInfo) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileInfo) GetTxId() int32 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *FileInfo) GetGaps() bool {
	if m != nil {
		return m.Gaps
	}
	return false
}

type TCP struct {
	TcpFlags             string   `protobuf:"bytes,1,opt,name=tcp_flags,json=tcpFlags,proto3" json:"tcp_flags,omitempty"`
	TcpFlagsTs           string   `protobuf:"bytes,2,opt,name=tcp_flags_ts,json=tcpFlagsTs,proto3" json:"tcp_flags_ts,omitempty"`
	TcpFlagsTc           string   `protobuf:"bytes,3,opt,name=tcp_flags_tc,json=tcpFlagsTc,proto3" json:"tcp_flags_tc,omitempty"`
	Syn                  bool     `protobuf:"varint,4,opt,name=syn,proto3" json:"syn,omitempty"`
	Rst                  bool     `protobuf:"varint,5,opt,name=rst,proto3" json:"rst,omitempty"`
	Psh                  bool     `protobuf:"varint,6,opt,name=psh,proto3" json:"psh,omitempty"`
	Ack                  bool     `protobuf:"varint,7,opt,name=ack,proto3" json:"ack,omitempty"`
	Ecn                  bool     `protobuf:"varint,8,opt,name=ecn,proto3" json:"ecn,omitempty"`
	Cwr                  bool     `protobuf:"varint,9,opt,name=cwr,proto3" json:"cwr,omitempty"`
	Fin                  bool     `protobuf:"varint,10,opt,name=fin,proto3" json:"fin,omitempty"`
	Urg                  bool     `protobuf:"varint,11,opt,name=urg,proto3" json:"urg,omitempty"`
	State                string   `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TCP) Reset()         { *m = TCP{} }
func (m *TCP) String() string { return proto.CompactTextString(m) }
func (*TCP) ProtoMessage()    {}
func (*TCP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{6}
}

func (m *TCP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TCP.Unmarshal(m, b)
}
func (m *TCP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TCP.Marshal(b, m, deterministic)
}
func (m *TCP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TCP.Merge(m, src)
}
func (m *TCP) XXX_Size() int {
	return xxx_messageInfo_TCP.Size(m)
}
func (m *TCP) XXX_DiscardUnknown() {
	xxx_messageInfo_TCP.DiscardUnknown(m)
}

var xxx_messageInfo_TCP proto.InternalMessageInfo

func (m *TCP) GetTcpFlags() string {
	if m != nil {
		return m.TcpFlags
	}
	return ""
}

func (m *TCP) GetTcpFlagsTs() string {
	if m != nil {
		return m.TcpFlagsTs
	}
	return ""
}

func (m *TCP) GetTcpFlagsTc() string {
	if m != nil {
		return m.TcpFlagsTc
	}
	return ""
}

func (m *TCP) GetSyn() bool {
	if m != nil {
		return m.Syn
	}
	return false
}

func (m *TCP) GetRst() bool {
	if m != nil {
		return m.Rst
	}
	return false
}

func (m *TCP) GetPsh() bool {
	if m != nil {
		return m.Psh
	}
	return false
}

func (m *TCP) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func (m *TCP) GetEcn() bool {
	if m != nil {
		return m.Ecn
	}
	return false
}

func (m *TCP) GetCwr() bool {
	if m != nil {
		return m.Cwr
	}
	return false
}

func (m *TCP) GetFin() bool {
	if m != nil {
		return m.Fin
	}
	return false
}

func (m *TCP) GetUrg() bool {
	if m != nil {
		return m.Urg
	}
	return false
}

func (m *TCP) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Flow struct {
	PktsToserver         int32    `protobuf:"varint,1,opt,name=pkts_toserver,json=pktsToserver,proto3" json:"pkts_toserver,omitempty"`
	PktsToclient         int32    `protobuf:"varint,2,opt,name=pkts_toclient,json=pktsToclient,proto3" json:"pkts_toclient,omitempty"`
	BytesToserver        int32    `protobuf:"varint,3,opt,name=bytes_toserver,json=bytesToserver,proto3" json:"bytes_toserver,omitempty"`
	BytesToclient        int32    `protobuf:"varint,4,opt,name=bytes_toclient,json=bytesToclient,proto3" json:"bytes_toclient,omitempty"`
	Start                string   `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End                  string   `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	Age                  int32    `protobuf:"varint,7,opt,name=age,proto3" json:"age,omitempty"`
	State                string   `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	Reason               string   `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason,omitempty"`
	Alerted              bool     `protobuf:"varint,10,opt,name=alerted,proto3" json:"alerted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flow) Reset()         { *m = Flow{} }
func (m *Flow) String() string { return proto.CompactTextString(m) }
func (*Flow) ProtoMessage()    {}
func (*Flow) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{7}
}

func (m *Flow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flow.Unmarshal(m, b)
}
func (m *Flow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flow.Marshal(b, m, deterministic)
}
func (m *Flow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flow.Merge(m, src)
}
func (m *Flow) XXX_Size() int {
	return xxx_messageInfo_Flow.Size(m)
}
func (m *Flow) XXX_DiscardUnknown() {
	xxx_messageInfo_Flow.DiscardUnknown(m)
}

var xxx_messageInfo_Flow proto.InternalMessageInfo

func (m *Flow) GetPktsToserver() int32 {
	if m != nil {
		return m.PktsToserver
	}
	return 0
}

func (m *Flow) GetPktsToclient() int32 {
	if m != nil {
		return m.PktsToclient
	}
	return 0
}

func (m *Flow) GetBytesToserver() int32 {
	if m != nil {
		return m.BytesToserver
	}
	return 0
}

func (m *Flow) GetBytesToclient() int32 {
	if m != nil {
		return m.BytesToclient
	}
	return 0
}

func (m *Flow) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Flow) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *Flow) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Flow) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Flow) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Flow) GetAlerted() bool {
	if m != nil {
		return m.Alerted
	}
	return false
}

type DNS struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Rrname               string   `protobuf:"bytes,3,opt,name=rrname,proto3" json:"rrname,omitempty"`
	Rrtype               string   `protobuf:"bytes,4,opt,name=rrtype,proto3" json:"rrtype,omitempty"`
	Rdata                string   `protobuf:"bytes,5,opt,name=rdata,proto3" json:"rdata,omitempty"`
	Rcode                string   `protobuf:"bytes,8,opt,name=rcode,proto3" json:"rcode,omitempty"`
	Ttl                  int32    `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	TxId                 int32    `protobuf:"varint,7,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Aa                   bool     `protobuf:"varint,9,opt,name=aa,proto3" json:"aa,omitempty"`
	Qr                   bool     `protobuf:"varint,10,opt,name=qr,proto3" json:"qr,omitempty"`
	Rd                   bool     `protobuf:"varint,11,opt,name=rd,proto3" json:"rd,omitempty"`
	Ra                   bool     `protobuf:"varint,12,opt,name=ra,proto3" json:"ra,omitempty"`
	Flags                string   `protobuf:"bytes,13,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNS) Reset()         { *m = DNS{} }
func (m *DNS) String() string { return proto.CompactTextString(m) }
func (*DNS) ProtoMessage()    {}
func (*DNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{8}
}

func (m *DNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNS.Unmarshal(m, b)
}
func (m *DNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNS.Marshal(b, m, deterministic)
}
func (m *DNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNS.Merge(m, src)
}
func (m *DNS) XXX_Size() int {
	return xxx_messageInfo_DNS.Size(m)
}
func (m *DNS) XXX_DiscardUnknown() {
	xxx_messageInfo_DNS.DiscardUnknown(m)
}

var xxx_messageInfo_DNS proto.InternalMessageInfo

func (m *DNS) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DNS) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DNS) GetRrname() string {
	if m != nil {
		return m.Rrname
	}
	return ""
}

func (m *DNS) GetRrtype() string {
	if m != nil {
		return m.Rrtype
	}
	return ""
}

func (m *DNS) GetRdata() string {
	if m != nil {
		return m.Rdata
	}
	return ""
}

func (m *DNS) GetRcode() string {
	if m != nil {
		return m.Rcode
	}
	return ""
}

func (m *DNS) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *DNS) GetTxId() int32 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *DNS) GetAa() bool {
	if m != nil {
		return m.Aa
	}
	return false
}

func (m *DNS) GetQr() bool {
	if m != nil {
		return m.Qr
	}
	return false
}

func (m *DNS) GetRd() bool {
	if m != nil {
		return m.Rd
	}
	return false
}

func (m *DNS) GetRa() bool {
	if m != nil {
		return m.Ra
	}
	return false
}

func (m *DNS) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

type TLS struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Issuerdn             string   `protobuf:"bytes,2,opt,name=issuerdn,proto3" json:"issuerdn,omitempty"`
	SessionResumed       bool     `protobuf:"varint,3,opt,name=session_resumed,json=sessionResumed,proto3" json:"session_resumed,omitempty"`
	Serial               string   `protobuf:"bytes,4,opt,name=serial,proto3" json:"serial,omitempty"`
	Fingerprint          string   `protobuf:"bytes,5,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Sni                  string   `protobuf:"bytes,6,opt,name=sni,proto3" json:"sni,omitempty"`
	Version              string   `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Notbefore            string   `protobuf:"bytes,8,opt,name=notbefore,proto3" json:"notbefore,omitempty"`
	Notafter             string   `protobuf:"bytes,9,opt,name=notafter,proto3" json:"notafter,omitempty"`
	Certificate          string   `protobuf:"bytes,10,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Chain                string   `protobuf:"bytes,11,opt,name=chain,proto3" json:"chain,omitempty"`
	Ja3                  *JA3     `protobuf:"bytes,12,opt,name=ja3,proto3" json:"ja3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLS) Reset()         { *m = TLS{} }
func (m *TLS) String() string { return proto.CompactTextString(m) }
func (*TLS) ProtoMessage()    {}
func (*TLS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{9}
}

func (m *TLS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLS.Unmarshal(m, b)
}
func (m *TLS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLS.Marshal(b, m, deterministic)
}
func (m *TLS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLS.Merge(m, src)
}
func (m *TLS) XXX_Size() int {
	return xxx_messageInfo_TLS.Size(m)
}
func (m *TLS) XXX_DiscardUnknown() {
	xxx_messageInfo_TLS.DiscardUnknown(m)
}

var xxx_messageInfo_TLS proto.InternalMessageInfo

func (m *TLS) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *TLS) GetIssuerdn() string {
	if m != nil {
		return m.Issuerdn
	}
	return ""
}

func (m *TLS) GetSessionResumed() bool {
	if m != nil {
		return m.SessionResumed
	}
	return false
}

func (m *TLS) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *TLS) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *TLS) GetSni() string {
	if m != nil {
		return m.Sni
	}
	return ""
}

func (m *TLS) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *TLS) GetNotbefore() string {
	if m != nil {
		return m.Notbefore
	}
	return ""
}

func (m *TLS) GetNotafter() string {
	if m != nil {
		return m.Notafter
	}
	return ""
}

func (m *TLS) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *TLS) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *TLS) GetJa3() *JA3 {
	if m != nil {
		return m.Ja3
	}
	return nil
}

type JA3 struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	String_              string   `protobuf:"bytes,3,opt,name=string,proto3" json:"string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JA3) Reset()         { *m = JA3{} }
func (m *JA3) String() string { return proto.CompactTextString(m) }
func (*JA3) ProtoMessage()    {}
func (*JA3) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{10}
}

func (m *JA3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JA3.Unmarshal(m, b)
}
func (m *JA3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JA3.Marshal(b, m, deterministic)
}
func (m *JA3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JA3.Merge(m, src)
}
func (m *JA3) XXX_Size() int {
	return xxx_messageInfo_JA3.Size(m)
}
func (m *JA3) XXX_DiscardUnknown() {
	xxx_messageInfo_JA3.DiscardUnknown(m)
}

var xxx_messageInfo_JA3 proto.InternalMessageInfo

func (m *JA3) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *JA3) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *JA3) GetString_() string {
	if m != nil {
		return m.String_
	}
	return ""
}

type PacketInfo struct {
	Linktype             int32    `protobuf:"varint,1,opt,name=linktype,proto3" json:"linktype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PacketInfo) Reset()         { *m = PacketInfo{} }
func (m *PacketInfo) String() string { return proto.CompactTextString(m) }
func (*PacketInfo) ProtoMessage()    {}
func (*PacketInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{11}
}

func (m *PacketInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketInfo.Unmarshal(m, b)
}
func (m *PacketInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketInfo.Marshal(b, m, deterministic)
}
func (m *PacketInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketInfo.Merge(m, src)
}
func (m *PacketInfo) XXX_Size() int {
	return xxx_messageInfo_PacketInfo.Size(m)
}
func (m *PacketInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PacketInfo proto.InternalMessageInfo

func (m *PacketInfo) GetLinktype() int32 {
	if m != nil {
		return m.Linktype
	}
	return 0
}

type SSH struct {
	Server               *Server  `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Client               *Client  `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSH) Reset()         { *m = SSH{} }
func (m *SSH) String() string { return proto.CompactTextString(m) }
func (*SSH) ProtoMessage()    {}
func (*SSH) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{12}
}

func (m *SSH) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSH.Unmarshal(m, b)
}
func (m *SSH) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSH.Marshal(b, m, deterministic)
}
func (m *SSH) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSH.Merge(m, src)
}
func (m *SSH) XXX_Size() int {
	return xxx_messageInfo_SSH.Size(m)
}
func (m *SSH) XXX_DiscardUnknown() {
	xxx_messageInfo_SSH.DiscardUnknown(m)
}

var xxx_messageInfo_SSH proto.InternalMessageInfo

func (m *SSH) GetServer() *Server {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *SSH) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type Client struct {
	ProtoVersion         string   `protobuf:"bytes,1,opt,name=proto_version,json=protoVersion,proto3" json:"proto_version,omitempty"`
	SoftwareVersion      string   `protobuf:"bytes,2,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{13}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

func (m *Client) GetSoftwareVersion() string {
	if m != nil {
		return m.SoftwareVersion
	}
	return ""
}

type Server struct {
	ProtoVersion         string   `protobuf:"bytes,1,opt,name=proto_version,json=protoVersion,proto3" json:"proto_version,omitempty"`
	SoftwareVersion      string   `protobuf:"bytes,2,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{14}
}

func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

func (m *Server) GetSoftwareVersion() string {
	if m != nil {
		return m.SoftwareVersion
	}
	return ""
}

type SMTP struct {
	Helo                 string   `protobuf:"bytes,1,opt,name=helo,proto3" json:"helo,omitempty"`
	MailFrom             string   `protobuf:"bytes,2,opt,name=mail_from,json=mailFrom,proto3" json:"mail_from,omitempty"`
	RcptTo               []string `protobuf:"bytes,3,rep,name=rcpt_to,json=rcptTo,proto3" json:"rcpt_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMTP) Reset()         { *m = SMTP{} }
func (m *SMTP) String() string { return proto.CompactTextString(m) }
func (*SMTP) ProtoMessage()    {}
func (*SMTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{15}
}

func (m *SMTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMTP.Unmarshal(m, b)
}
func (m *SMTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMTP.Marshal(b, m, deterministic)
}
func (m *SMTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMTP.Merge(m, src)
}
func (m *SMTP) XXX_Size() int {
	return xxx_messageInfo_SMTP.Size(m)
}
func (m *SMTP) XXX_DiscardUnknown() {
	xxx_messageInfo_SMTP.DiscardUnknown(m)
}

var xxx_messageInfo_SMTP proto.InternalMessageInfo

func (m *SMTP) GetHelo() string {
	if m != nil {
		return m.Helo
	}
	return ""
}

func (m *SMTP) GetMailFrom() string {
	if m != nil {
		return m.MailFrom
	}
	return ""
}

func (m *SMTP) GetRcptTo() []string {
	if m != nil {
		return m.RcptTo
	}
	return nil
}

type Email struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_a88655da38237f58, []int{16}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*EVE)(nil), "emitto.sensor.EVE")
	proto.RegisterType((*Vars)(nil), "emitto.sensor.Vars")
	proto.RegisterMapType((map[string]bool)(nil), "emitto.sensor.Vars.FlowbitsEntry")
	proto.RegisterType((*Alert)(nil), "emitto.sensor.Alert")
	proto.RegisterType((*Metadata)(nil), "emitto.sensor.Metadata")
	proto.RegisterType((*HTTP)(nil), "emitto.sensor.HTTP")
	proto.RegisterType((*FileInfo)(nil), "emitto.sensor.FileInfo")
	proto.RegisterType((*TCP)(nil), "emitto.sensor.TCP")
	proto.RegisterType((*Flow)(nil), "emitto.sensor.Flow")
	proto.RegisterType((*DNS)(nil), "emitto.sensor.DNS")
	proto.RegisterType((*TLS)(nil), "emitto.sensor.TLS")
	proto.RegisterType((*JA3)(nil), "emitto.sensor.JA3")
	proto.RegisterType((*PacketInfo)(nil), "emitto.sensor.PacketInfo")
	proto.RegisterType((*SSH)(nil), "emitto.sensor.SSH")
	proto.RegisterType((*Client)(nil), "emitto.sensor.Client")
	proto.RegisterType((*Server)(nil), "emitto.sensor.Server")
	proto.RegisterType((*SMTP)(nil), "emitto.sensor.SMTP")
	proto.RegisterType((*Email)(nil), "emitto.sensor.Email")
}

func init() {
	proto.RegisterFile("source/sensor/suricata/proto/suricata_eve.proto", fileDescriptor_a88655da38237f58)
}

var fileDescriptor_a88655da38237f58 = []byte{
	// 1695 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcb, 0x6e, 0x1b, 0xbd,
	0x15, 0x86, 0xae, 0x1e, 0x53, 0xbe, 0x85, 0xb9, 0x8d, 0x73, 0x69, 0x1c, 0xf5, 0x12, 0x37, 0x68,
	0x6d, 0x20, 0xde, 0x14, 0x29, 0xba, 0x70, 0x1d, 0x1b, 0x56, 0x90, 0x04, 0x06, 0xa5, 0x06, 0xdd,
	0x0d, 0xe8, 0x19, 0x4a, 0x62, 0x3c, 0x22, 0x27, 0x24, 0x25, 0x47, 0x5d, 0x66, 0x5d, 0x14, 0xe8,
	0x1b, 0xf4, 0x15, 0xba, 0xec, 0xeb, 0xf4, 0x49, 0x7e, 0x9c, 0x43, 0xce, 0x48, 0x91, 0xf5, 0xef,
	0xfe, 0xdd, 0x39, 0xdf, 0xf9, 0xc8, 0xe1, 0x39, 0x3c, 0x17, 0x0e, 0x39, 0xb6, 0x7a, 0x6a, 0x52,
	0x71, 0x6c, 0x85, 0xb2, 0xda, 0x1c, 0xdb, 0xa9, 0x91, 0x29, 0x77, 0xfc, 0xb8, 0x30, 0xda, 0xe9,
	0x4a, 0x4d, 0xc4, 0x4c, 0x1c, 0x21, 0x44, 0xb7, 0xc5, 0x44, 0x3a, 0xa7, 0x8f, 0xfc, 0x82, 0xee,
	0x7f, 0x23, 0xd2, 0x38, 0xff, 0x7c, 0x4e, 0x9f, 0x91, 0x4d, 0x27, 0x27, 0xc2, 0x3a, 0x3e, 0x29,
	0xe2, 0xda, 0x41, 0xed, 0x70, 0x93, 0x2d, 0x00, 0xfa, 0x9c, 0x10, 0x31, 0x13, 0xca, 0x25, 0x6e,
	0x5e, 0x88, 0xb8, 0xee, 0xcd, 0x88, 0x0c, 0xe6, 0x85, 0xa0, 0x0f, 0x49, 0xdb, 0x9a, 0x34, 0x91,
	0x45, 0xdc, 0x40, 0x53, 0xcb, 0x9a, 0xb4, 0x57, 0xd0, 0x7d, 0x12, 0x01, 0x5c, 0x68, 0xe3, 0xe2,
	0xe6, 0x41, 0xed, 0xb0, 0xc5, 0x36, 0xac, 0x49, 0xaf, 0xb4, 0x71, 0xf4, 0x31, 0xd9, 0xc8, 0x84,
	0x75, 0xb0, 0xa4, 0x85, 0x4b, 0xda, 0xa0, 0xf6, 0x0a, 0xfa, 0x94, 0x6c, 0xa2, 0x01, 0x17, 0xb5,
	0x71, 0x51, 0x04, 0x00, 0xae, 0x7a, 0x40, 0x5a, 0xe8, 0x44, 0xbc, 0xe1, 0x3f, 0xe3, 0x3d, 0xda,
	0x27, 0x51, 0x91, 0xf2, 0x22, 0x49, 0x95, 0x8b, 0x23, 0xff, 0x19, 0xd0, 0xcf, 0x94, 0x83, 0xdd,
	0x78, 0x51, 0x24, 0x7e, 0xd1, 0x26, 0x2e, 0x8a, 0x78, 0x51, 0x5c, 0xe1, 0xba, 0x03, 0xb2, 0x55,
	0x19, 0x13, 0x97, 0xc6, 0x04, 0xed, 0xa4, 0xb4, 0x0f, 0xd2, 0x15, 0x86, 0x8d, 0x3b, 0x2b, 0x0c,
	0x0b, 0x7e, 0x0c, 0x73, 0x7d, 0x9b, 0xc8, 0x2c, 0xde, 0x3a, 0xa8, 0x1d, 0x36, 0x58, 0x1b, 0xd4,
	0x5e, 0x46, 0x29, 0x69, 0xce, 0x72, 0xae, 0xe2, 0x6d, 0x3c, 0x10, 0xca, 0xf4, 0x3e, 0x69, 0xb9,
	0x6f, 0x40, 0xdd, 0xf1, 0xa0, 0xfb, 0xd6, 0xcb, 0xe8, 0x23, 0xd2, 0x2e, 0x78, 0x7a, 0x23, 0x5c,
	0xbc, 0xeb, 0x03, 0xe1, 0x35, 0x38, 0xba, 0x4c, 0x27, 0x85, 0x8f, 0xf8, 0x9e, 0x0f, 0x04, 0x00,
	0x18, 0xf0, 0xd2, 0x98, 0xea, 0x4c, 0xc4, 0xf7, 0x16, 0xc6, 0x33, 0x9d, 0x09, 0xfa, 0x07, 0x42,
	0x8d, 0xb0, 0x85, 0x56, 0x56, 0x24, 0x0b, 0x16, 0x45, 0xd6, 0x5e, 0x69, 0xe9, 0xfd, 0x2c, 0x1b,
	0x3f, 0x78, 0xff, 0x2e, 0x1b, 0x3f, 0xfc, 0x8a, 0x34, 0x67, 0xdc, 0xd8, 0xf8, 0xc1, 0x41, 0xed,
	0xb0, 0xf3, 0xe6, 0xfe, 0xd1, 0x0f, 0xc9, 0x74, 0xf4, 0x99, 0x1b, 0xcb, 0x90, 0x40, 0x5f, 0x93,
	0x16, 0xcf, 0x85, 0x71, 0xf1, 0x43, 0x64, 0x3e, 0x58, 0x61, 0x9e, 0x82, 0x8d, 0x79, 0x0a, 0x6c,
	0x3a, 0x76, 0xae, 0x88, 0x1f, 0xad, 0xdd, 0xf4, 0x72, 0x30, 0xb8, 0x62, 0x48, 0xa0, 0x27, 0x24,
	0x1a, 0xca, 0x5c, 0x48, 0x35, 0xd4, 0xf1, 0x63, 0x24, 0x3f, 0x5e, 0x21, 0x5f, 0xc8, 0x5c, 0xf4,
	0xd4, 0x50, 0xb3, 0x8a, 0x48, 0x7f, 0x43, 0x1a, 0x2e, 0x2d, 0xe2, 0x18, 0xf9, 0x74, 0x85, 0x3f,
	0x38, 0xbb, 0x62, 0x60, 0x06, 0x56, 0xa6, 0x6c, 0xbc, 0xbf, 0x96, 0xf5, 0xee, 0x53, 0x9f, 0x81,
	0x19, 0xf7, 0xca, 0x6d, 0xfc, 0x64, 0xfd, 0x5e, 0x1f, 0xfa, 0x0c, 0xcc, 0xe0, 0x0f, 0x64, 0x41,
	0xfc, 0x74, 0xad, 0x3f, 0x17, 0xb9, 0xbe, 0x65, 0x48, 0xa0, 0x6f, 0x49, 0xc7, 0xdf, 0x76, 0x82,
	0x2e, 0x3d, 0x43, 0xfe, 0xfe, 0x0a, 0xff, 0x0a, 0x19, 0xe8, 0x14, 0x29, 0x2a, 0x19, 0x8e, 0x62,
	0xed, 0x38, 0x7e, 0xbe, 0xf6, 0x28, 0xfd, 0xfe, 0x25, 0x03, 0x33, 0x1c, 0xc5, 0x4e, 0x5c, 0x11,
	0xff, 0x6a, 0xed, 0x51, 0xfa, 0x1f, 0x21, 0xb4, 0x40, 0x80, 0xfb, 0x12, 0x13, 0x2e, 0xf3, 0xf8,
	0xc5, 0xda, 0xfb, 0x3a, 0x07, 0x1b, 0xf3, 0x94, 0xee, 0xf7, 0x1a, 0x69, 0xc2, 0x55, 0xd3, 0xbf,
	0x90, 0x08, 0xfc, 0xb8, 0x96, 0xce, 0xc6, 0xb5, 0x83, 0xc6, 0x61, 0xe7, 0xcd, 0xcb, 0x35, 0x19,
	0x81, 0x1e, 0x03, 0xe7, 0x5c, 0x39, 0x33, 0x67, 0xd5, 0x92, 0x27, 0x7f, 0x26, 0xdb, 0x3f, 0x98,
	0xe8, 0x1e, 0x69, 0xdc, 0x88, 0x79, 0x68, 0x3f, 0x20, 0x42, 0xc5, 0xcf, 0x78, 0x3e, 0xf5, 0x3d,
	0x27, 0x62, 0x5e, 0x79, 0x5b, 0xff, 0x53, 0xad, 0xfb, 0xaf, 0x3a, 0x69, 0x61, 0x16, 0x41, 0x05,
	0xf1, 0xd4, 0x49, 0xad, 0xc2, 0xc2, 0xa0, 0xc1, 0x6e, 0x23, 0x99, 0xe1, 0xca, 0x16, 0x03, 0x91,
	0xbe, 0x24, 0x5b, 0x56, 0x8e, 0x14, 0x77, 0x53, 0x23, 0xa0, 0x0e, 0x1b, 0x68, 0xea, 0x54, 0x58,
	0x2f, 0x83, 0x45, 0x46, 0xcc, 0x42, 0xbb, 0x02, 0x11, 0x3a, 0x63, 0x45, 0x08, 0xcd, 0x6a, 0x01,
	0xd0, 0x27, 0x24, 0x4a, 0xb9, 0x13, 0x23, 0x6d, 0xe6, 0xd8, 0xae, 0x36, 0x59, 0xa5, 0x83, 0xcd,
	0x8a, 0x99, 0x30, 0xd2, 0xcd, 0xb1, 0x63, 0xb5, 0x58, 0xa5, 0x43, 0x05, 0x3b, 0xa1, 0xb8, 0x72,
	0x70, 0x0e, 0xdf, 0xb5, 0x22, 0x0f, 0xf4, 0x32, 0xc8, 0xf3, 0x89, 0x70, 0x3c, 0xe3, 0x8e, 0x63,
	0xd7, 0xba, 0x9b, 0xe7, 0x1f, 0x83, 0x99, 0x55, 0xc4, 0xee, 0x25, 0x89, 0x4a, 0x14, 0xfa, 0xf5,
	0xb4, 0xc8, 0xb8, 0x13, 0x59, 0xc2, 0x1d, 0x5e, 0xcd, 0x26, 0xdb, 0x0c, 0xc8, 0xa9, 0x03, 0x73,
	0x6a, 0x44, 0x69, 0xae, 0x7b, 0x73, 0x40, 0x4e, 0x5d, 0xf7, 0x7f, 0x0d, 0xd2, 0x84, 0xaa, 0x03,
	0x07, 0xc6, 0xda, 0x3a, 0xc5, 0x27, 0x22, 0xc4, 0xb6, 0xd2, 0x21, 0x50, 0x53, 0x93, 0x87, 0x59,
	0x00, 0x22, 0xfd, 0x1d, 0xd9, 0x85, 0x2a, 0x4d, 0xa6, 0x56, 0x98, 0x84, 0x8f, 0x84, 0x72, 0x61,
	0x1c, 0x6c, 0x03, 0xfc, 0x37, 0x2b, 0xcc, 0x29, 0x80, 0xf4, 0x35, 0xb9, 0x87, 0xbc, 0x54, 0x2b,
	0x57, 0xcd, 0x94, 0x26, 0x32, 0x71, 0x83, 0x33, 0x8f, 0x63, 0xbf, 0x79, 0x4e, 0x08, 0x72, 0x8d,
	0x18, 0x0a, 0x53, 0x46, 0x1f, 0x10, 0x06, 0x00, 0x7d, 0x41, 0x3a, 0x68, 0x9e, 0x08, 0x37, 0xd6,
	0x59, 0xb8, 0x00, 0x5c, 0xf1, 0x11, 0x11, 0xf0, 0x00, 0xbb, 0x77, 0xaa, 0xf3, 0x30, 0x34, 0x2a,
	0x1d, 0xf2, 0xc6, 0x3a, 0xee, 0xa6, 0x36, 0xc4, 0x3f, 0x68, 0x80, 0xe7, 0x42, 0x8d, 0xdc, 0x18,
	0x63, 0xdf, 0x62, 0x41, 0x83, 0xbd, 0x8c, 0xc8, 0xa4, 0x11, 0xa9, 0x0b, 0xb3, 0xa2, 0xd2, 0x21,
	0x1a, 0xdf, 0x86, 0xc3, 0x30, 0x20, 0x40, 0xac, 0xbc, 0x34, 0xe2, 0xeb, 0x14, 0x06, 0xda, 0xb5,
	0xce, 0xe6, 0x38, 0x23, 0x82, 0x97, 0xcc, 0xe3, 0x7f, 0xd5, 0xd9, 0x1c, 0x7a, 0x70, 0xe0, 0x86,
	0x46, 0x8c, 0xe4, 0x6d, 0x24, 0xef, 0x79, 0xb2, 0x37, 0x20, 0xfb, 0x29, 0xc1, 0x08, 0xf8, 0x11,
	0xe9, 0x47, 0x49, 0x04, 0x00, 0x8c, 0xc8, 0xee, 0xbf, 0x6b, 0x24, 0x2a, 0x9b, 0x20, 0x9c, 0x18,
	0xda, 0xe0, 0xf2, 0xfd, 0x95, 0x3a, 0x54, 0x16, 0xf8, 0x5b, 0x4e, 0x73, 0xaf, 0xf8, 0x98, 0x68,
	0x23, 0x7c, 0x6d, 0x44, 0x2c, 0x68, 0x30, 0xce, 0xac, 0xfc, 0x87, 0x08, 0x75, 0x81, 0xf2, 0x62,
	0x9c, 0xb5, 0x96, 0xc6, 0x19, 0x25, 0xcd, 0x11, 0x2f, 0x2c, 0x5e, 0x45, 0xc4, 0x50, 0xee, 0xfe,
	0xb3, 0x4e, 0x1a, 0x83, 0xb3, 0x2b, 0xcc, 0xf9, 0xb4, 0x48, 0x86, 0x39, 0x1f, 0xd9, 0xf2, 0x3c,
	0x2e, 0x2d, 0x2e, 0x40, 0x87, 0x59, 0x5b, 0x19, 0x61, 0xd6, 0xfa, 0x63, 0x91, 0xd2, 0x3e, 0x58,
	0x65, 0xa4, 0x21, 0xb9, 0x16, 0x8c, 0x14, 0x6e, 0xc1, 0xce, 0x15, 0x1e, 0x32, 0x62, 0x20, 0x62,
	0x39, 0x5b, 0x87, 0x27, 0x8c, 0x18, 0x88, 0x80, 0x14, 0x76, 0x1c, 0xce, 0x07, 0x22, 0x20, 0x3c,
	0xbd, 0xc1, 0xf4, 0x88, 0x18, 0x88, 0x80, 0x88, 0x54, 0x61, 0x5a, 0x44, 0x0c, 0x44, 0x40, 0xd2,
	0x5b, 0x83, 0x09, 0x11, 0x31, 0x10, 0x01, 0x19, 0x4a, 0x85, 0x89, 0x10, 0x31, 0x10, 0x7d, 0x45,
	0x8c, 0x30, 0x07, 0x22, 0xa8, 0x88, 0xd1, 0x22, 0xc6, 0x5b, 0x4b, 0x31, 0xee, 0xfe, 0xa7, 0x4e,
	0x9a, 0xd0, 0xf7, 0xe8, 0xaf, 0xc9, 0x76, 0x71, 0xe3, 0x6c, 0xe2, 0xb4, 0x15, 0x66, 0x26, 0x0c,
	0xc6, 0xa4, 0xc5, 0xb6, 0x00, 0x1c, 0x04, 0x6c, 0x89, 0x94, 0xe6, 0x12, 0x6a, 0xaa, 0xbe, 0x4c,
	0xf2, 0x18, 0xfd, 0x2d, 0xd9, 0xb9, 0x9e, 0x3b, 0xb1, 0xb4, 0x95, 0x6f, 0x6d, 0xdb, 0x88, 0x56,
	0x7b, 0x2d, 0xd1, 0xc2, 0x66, 0xcd, 0x1f, 0x68, 0x61, 0x37, 0x7f, 0x6c, 0xe3, 0x42, 0xbd, 0x79,
	0x05, 0x83, 0xa2, 0xca, 0x1a, 0x03, 0x11, 0x03, 0x37, 0x12, 0xa1, 0xb5, 0x81, 0xb8, 0x70, 0x38,
	0x5a, 0x49, 0x2a, 0x23, 0xb8, 0xd5, 0x2a, 0x3c, 0xc1, 0x82, 0x46, 0x63, 0xb2, 0x81, 0x0f, 0x00,
	0x91, 0x85, 0x30, 0x96, 0x6a, 0xf7, 0x7b, 0x9d, 0x34, 0xde, 0x7d, 0xea, 0x43, 0x36, 0x61, 0x77,
	0xf0, 0xc9, 0x82, 0x32, 0xdd, 0x21, 0xf5, 0xaa, 0xab, 0xd7, 0x25, 0x3e, 0xa0, 0x8c, 0xc1, 0x14,
	0x6f, 0x84, 0xdd, 0x51, 0xf3, 0xf8, 0x52, 0x6f, 0x09, 0x1a, 0x9c, 0xd1, 0x60, 0x67, 0x0d, 0xde,
	0xa1, 0x82, 0x28, 0xbe, 0x93, 0xc2, 0xc9, 0x51, 0x01, 0x0f, 0x9d, 0xcb, 0xc3, 0x3b, 0x14, 0xc4,
	0x45, 0xd2, 0x6f, 0x2c, 0x25, 0xfd, 0x0e, 0xa9, 0x73, 0x1e, 0x92, 0xa3, 0xce, 0x39, 0xe8, 0x5f,
	0x4d, 0xf0, 0xa9, 0xfe, 0xd5, 0x80, 0x6e, 0xb2, 0x90, 0x18, 0x75, 0x83, 0x7c, 0xc3, 0x31, 0x29,
	0x40, 0xc7, 0x8f, 0xfb, 0xa2, 0xf0, 0x25, 0xef, 0x95, 0xee, 0xff, 0xa1, 0x6c, 0x3e, 0xf4, 0x21,
	0x4c, 0x76, 0x7a, 0xfd, 0x05, 0xda, 0x8e, 0x8f, 0x43, 0xa9, 0x42, 0x7d, 0x4b, 0x6b, 0xa7, 0xc2,
	0x64, 0x2a, 0xd4, 0x4b, 0xa5, 0xd3, 0x57, 0x64, 0xd7, 0x0a, 0x6b, 0xa5, 0x56, 0xd0, 0x56, 0xa6,
	0x93, 0xaa, 0xa4, 0x77, 0x02, 0xcc, 0x3c, 0x8a, 0x25, 0x2f, 0x8c, 0xe4, 0x79, 0x19, 0x27, 0xaf,
	0xd1, 0x03, 0xd2, 0x19, 0x4a, 0x35, 0x12, 0xa6, 0x30, 0x52, 0x95, 0xb9, 0xb0, 0x0c, 0x61, 0xb9,
	0x29, 0x59, 0x66, 0x84, 0x55, 0x12, 0x8e, 0x3a, 0x13, 0x06, 0x76, 0x0f, 0xdd, 0xb6, 0x54, 0x61,
	0x8a, 0x2a, 0xed, 0xae, 0xc5, 0x50, 0x9b, 0x32, 0xc6, 0x0b, 0x00, 0x1c, 0x51, 0xda, 0xf1, 0xa1,
	0x13, 0xa6, 0x7c, 0xa6, 0x97, 0x3a, 0x9c, 0x23, 0x15, 0xc6, 0xc9, 0x21, 0xfc, 0xc9, 0x88, 0xd0,
	0x79, 0x97, 0x21, 0x08, 0x5f, 0x3a, 0xe6, 0x52, 0x85, 0xf6, 0xeb, 0x15, 0x78, 0x20, 0x7d, 0xe1,
	0x27, 0x18, 0xe5, 0xbb, 0x0f, 0xa4, 0xf7, 0xa7, 0x27, 0x0c, 0xcc, 0xdd, 0x73, 0xd2, 0x78, 0x7f,
	0x7a, 0x02, 0x89, 0x36, 0xe6, 0x76, 0x5c, 0x26, 0x1a, 0xc8, 0x80, 0x61, 0x9e, 0xf8, 0xc8, 0xa2,
	0xec, 0xfb, 0xa3, 0x91, 0x6a, 0x54, 0x26, 0x9b, 0xd7, 0xba, 0x87, 0x84, 0x2c, 0xde, 0x69, 0xe0,
	0x4e, 0x2e, 0xd5, 0x4d, 0x95, 0xba, 0x2d, 0x56, 0xe9, 0xdd, 0x94, 0x34, 0xfa, 0xfd, 0x4b, 0xfa,
	0x47, 0x8c, 0x7a, 0x59, 0xf4, 0x9d, 0x37, 0x0f, 0x57, 0x9f, 0x66, 0x68, 0x64, 0x81, 0x04, 0xf4,
	0xa5, 0xf2, 0xbf, 0x4b, 0x3f, 0x43, 0x23, 0x0b, 0xa4, 0xee, 0xdf, 0x49, 0xdb, 0x23, 0xd8, 0x3e,
	0xf0, 0xf7, 0xa5, 0xbc, 0x17, 0xef, 0xe1, 0x16, 0x82, 0x9f, 0xc3, 0xe5, 0xfc, 0x9e, 0xec, 0x59,
	0x3d, 0x74, 0xb7, 0xdc, 0x88, 0x8a, 0xe7, 0xbd, 0xde, 0x2d, 0xf1, 0x40, 0x85, 0x9d, 0xfb, 0x8b,
	0xc6, 0xf4, 0x4b, 0xee, 0x7c, 0x45, 0x9a, 0xf0, 0x1e, 0xc5, 0xab, 0x10, 0xb9, 0xae, 0xae, 0x42,
	0xe4, 0x1a, 0x26, 0x07, 0xbc, 0x3c, 0x93, 0xa1, 0xd1, 0x93, 0x32, 0xd3, 0x01, 0xb8, 0x30, 0x7a,
	0x02, 0xff, 0x60, 0x26, 0x2d, 0x5c, 0xe2, 0x74, 0xdc, 0xc0, 0xa7, 0x4c, 0x1b, 0xd4, 0x81, 0xee,
	0xbe, 0x20, 0x2d, 0x7c, 0xb7, 0x2e, 0x4d, 0xfa, 0x5a, 0x79, 0x6b, 0xa0, 0x5d, 0xb7, 0xf1, 0xac,
	0x27, 0x3f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x04, 0x4d, 0xde, 0x0a, 0x45, 0x0f, 0x00, 0x00,
}
